# File name: Project File.py
#: import SlideTransition kivy.uix.screenmanager.SlideTransition
#: import os os

ScreenManagement:
	MainScreen:
	SettingsScreen:

<MainScreen>:
	# Define the names of each button in order to link with py file
	btn_l: btn_lane
	btn_c: btn_cruise
	btn_s: btn_settings
	lbl_d: label_dark
	name: "main"
	
	# Create buttons/togglebuttons for the user to see
	Button:
		id: btn_settings # identity given to button
		text: "Settings" # text displayed on the button
		size_hint: (1/3), .1 # relative size of button compared to screen
		pos_hint: {'x': (2/3), 'center_y': .95} # relative position within the window
		on_release: # function completed when the button is released
			app.root.current = "settings"
			root.manager.transition.direction = 'left'

	ToggleButton:
		id: btn_cruise
		text: "Cruise Control: Off"
		size_hint: [.5,.1]
		pos_hint: {'x': 0, 'center_y': .05}
		on_press: root.Cruise_Control_Button() # function completed when button pressed

	ToggleButton:
		id: btn_lane
		text: "Lane Assist : Off"
		size_hint: [.5,.1]
		pos_hint: {'x': .5, 'center_y': .05}
		on_press: root.Lane_Assist_Button()

	Button: # button used as warning method because it can be shown and hid with ease
		id: label_dark
		text: ""
		pos_hint: {'x': 0, 'center_y': .95}
		size_hint: [2/3, .1]
		halign: 'left'
		background_color: (0,1,0,1) # color of text
		background_disabled_normal: '' # color of the button if disabled
		disabled: True # the button is disabled so cannot be pressed
		color: (1, 1, 1, 1)
		font_size: sp(20)



<SettingsScreen>: # class responsible for the settings screen
	name: "settings"
	
	speedUnit: btn_speed
	pedestrians: btn_pedestrians
	distanceUnit: btn_dunit
	carDistance: btn_cardis
	carSpeed: btn_speedcar

	Button:
		on_release: 
			app.root.current = "main"
			root.manager.transition.direction = 'right'

		text: "Back"
		size_hint: [.25,.1]
		pos_hint: {'x': .75, 'center_y': .95}


	Label: # a simple label responsible to display a string in the correct position
		text: "Speed unit"
		pos_hint: {'x': .05, 'center_y': .8}
		size_hint: [.4, .1]
		font_size: (self.width*0.075)
		outline_color: (0,0,0,1)
		outline_width: 1
		text_size: self.size
		halign: 'left'

	Button:
		id: btn_speed
		text: "Mph"
		size_hint: [.2, .1]
		pos_hint: {'x': .45, 'center_y': .8}
		on_press: root.Speed_Units()

	Label:
		text: "Show Pedestrians"
		pos_hint: {'x': .05, 'center_y': .65}
		size_hint: [.4, .1]
		font_size: (self.width*0.075)
		outline_color: (0,0,0,1)
		outline_width: 1
		text_size: self.size
		halign: 'left'


	ToggleButton:
		id: btn_pedestrians
		text: "Off"
		size_hint: [.2, .1]
		pos_hint: {'x': .45, 'center_y': .65}
		on_press: root.Pedestrians()


	Label:
		text: "Distance Units"
		pos_hint: {'x': .05, 'center_y': .5}
		size_hint: [.4, .1]
		font_size: (self.width*0.075)
		outline_color: (0,0,0,1)
		outline_width: 1
		text_size: self.size
		halign: 'left'


	Button:
		id: btn_dunit
		text: "Meters"
		size_hint: [.2, .1]
		pos_hint: {'x': .45, 'center_y': .5}
		on_press: root.Distance_Units()


	Label:
		text: "Distance to car in front"
		pos_hint: {'x': .05, 'center_y': .35}
		size_hint: [.4, .1]
		font_size: (self.width*0.075)
		outline_color: (0,0,0,1)
		outline_width: 1
		text_size: self.size
		halign: 'left'


	ToggleButton:
		id: btn_cardis
		text: "Off"
		size_hint: [.2, .1]
		pos_hint: {'x': .45, 'center_y': .35}
		on_press: root.Distance_ToCar()


	Label:
		text: "Speed of Car in front"
		pos_hint: {'x': .05, 'center_y': .2}
		size_hint: [.4, .1]
		font_size: (self.width*0.075)
		outline_color: (0,0,0,1)
		outline_width: 1
		text_size: self.size
		halign: 'left'



	ToggleButton:
		id: btn_speedcar
		text: "Off"
		size_hint: [.2,.1]
		pos_hint: {'x': .45, 'center_y': .2}
		on_press: root.Car_Speed()
